package pl.aaugustyniak.backproptrainer.model.entities;
// Generated 2013-08-25 15:19:23 by Hibernate Tools 3.2.1.GA

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ValidationMseReadout generated by hbm2java
 */
@Entity
@Table(name = "validation_mse_readout")
public class ValidationMseReadout implements java.io.Serializable {

    private Long id;
    private PeceptronTest peceptronTest;
    private double value;
    private int readoutNumber;

    public ValidationMseReadout() {
    }

    public ValidationMseReadout(PeceptronTest peceptronTest, double value, int readoutNumber) {
        this.peceptronTest = peceptronTest;
        this.value = value;
        this.readoutNumber = readoutNumber;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "test_id", nullable = false)
    public PeceptronTest getPeceptronTest() {
        return this.peceptronTest;
    }

    public void setPeceptronTest(PeceptronTest peceptronTest) {
        this.peceptronTest = peceptronTest;
    }

    @Column(name = "value", nullable = false, precision = 22, scale = 0)
    public double getValue() {
        return this.value;
    }

    public void setValue(double value) {
        this.value = value;
    }

    @Column(name = "readout_number", nullable = false)
    public int getReadoutNumber() {
        return this.readoutNumber;
    }

    public void setReadoutNumber(int readoutNumber) {
        this.readoutNumber = readoutNumber;
    }
}
